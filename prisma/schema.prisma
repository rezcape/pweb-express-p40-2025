generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  transactions Transaction[]

  @@map("users")
}

model Genre {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  books Book[]

  @@map("genres")
}

model Book {
  id          String   @id @default(uuid())
  title       String   @unique
  author      String
  price       Int
  stock       Int
  description String?
  genreId     String   @map("genre_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  genre            Genre              @relation(fields: [genreId], references: [id])
  transactionItems TransactionItem[]

  @@map("books")
}

model Transaction {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  total     Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user  User              @relation(fields: [userId], references: [id])
  items TransactionItem[]

  @@map("transactions")
}

model TransactionItem {
  id            String   @id @default(uuid())
  transactionId String   @map("transaction_id")
  bookId        String   @map("book_id")
  quantity      Int
  price         Int
  createdAt     DateTime @default(now()) @map("created_at")

  transaction Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  book        Book        @relation(fields: [bookId], references: [id])

  @@map("transaction_items")
}